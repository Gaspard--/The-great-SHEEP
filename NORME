Definition des termes:
camelCase(lolLel), PascalCase(LolLel), miniscule(lol_lel), MAJUSCULE(LOL_LEL)

Nom de class en PascalCase.
Nom de structure & union & enum en minuscule.

PAS DE FONCTION DANS LES STRUCTURES!!!

Nom de vairable et namespace en camelCase.
Nom de constant en MAJUSCULE.
Nom de fichier en minuscule.
Pas de fonction hors de namespace ou de class hormi le main.
Pas d'include de .cpp. Un seul .cpp et un .hpp par class.
On predeclare les class, puis on inclut dans le .cpp:
Garde dans les .hpp.

a.hpp:
#ifndef A_HPP_
# define A_HPP_
class B;

class A
{
  B b;
};

#endif !A_HPP_

a.cpp:
#include "a.hpp"
#include "b.hpp"

Pas de fonction dans les .hpp hormi pour les templates.
Acollades à la ligne. Espace après les mots clefs.
Espace autour de des operateur hormi les operateurs unaires (comme ! et ~). (Nb: - est parfois un operateur unaire)
Pas d'espace entre le nom d'une fonction et ses parenthèses lors de l'appelle d'une fonction.
Espace après une virgule.
Tous les mots clefs sont autorisés hormi auto.
Vous pouvez déclarer et affecter une variable sur la même ligne.
Pas de code redondant.
Allgnement des variable pas nécessaire.
Pointeurs à droite, références a gauche:
int   *a
int&   b
Les pointeurs sont découragés.
